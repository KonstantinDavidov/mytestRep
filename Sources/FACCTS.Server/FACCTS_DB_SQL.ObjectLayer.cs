//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("FACCTS_DB_SQL", "profiledata_profile_fkey", "Profiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FACCTS_DB_SQL.Profiles), "ProfileData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FACCTS_DB_SQL.ProfileData), true)]
[assembly: EdmRelationshipAttribute("FACCTS_DB_SQL", "usersinroles_rolename_fkey", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FACCTS_DB_SQL.Roles), "UsersInRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FACCTS_DB_SQL.UsersInRoles), true)]

#endregion

namespace FACCTS_DB_SQL
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class FACCTS_DB_SQLContext : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект FACCTS_DB_SQLContext, используя строку соединения из раздела "FACCTS_DB_SQLContext" файла конфигурации приложения.
        /// </summary>
        public FACCTS_DB_SQLContext() : base("name=FACCTS_DB_SQLContext", "FACCTS_DB_SQLContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта FACCTS_DB_SQLContext.
        /// </summary>
        public FACCTS_DB_SQLContext(string connectionString) : base(connectionString, "FACCTS_DB_SQLContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта FACCTS_DB_SQLContext.
        /// </summary>
        public FACCTS_DB_SQLContext(EntityConnection connection) : base(connection, "FACCTS_DB_SQLContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ProfileData> ProfileData
        {
            get
            {
                if ((_ProfileData == null))
                {
                    _ProfileData = base.CreateObjectSet<ProfileData>("ProfileData");
                }
                return _ProfileData;
            }
        }
        private ObjectSet<ProfileData> _ProfileData;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Profiles> Profiles
        {
            get
            {
                if ((_Profiles == null))
                {
                    _Profiles = base.CreateObjectSet<Profiles>("Profiles");
                }
                return _Profiles;
            }
        }
        private ObjectSet<Profiles> _Profiles;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Roles> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Roles>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Roles> _Roles;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Sessions> Sessions
        {
            get
            {
                if ((_Sessions == null))
                {
                    _Sessions = base.CreateObjectSet<Sessions>("Sessions");
                }
                return _Sessions;
            }
        }
        private ObjectSet<Sessions> _Sessions;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<UsersInRoles> UsersInRoles
        {
            get
            {
                if ((_UsersInRoles == null))
                {
                    _UsersInRoles = base.CreateObjectSet<UsersInRoles>("UsersInRoles");
                }
                return _UsersInRoles;
            }
        }
        private ObjectSet<UsersInRoles> _UsersInRoles;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ProfileData. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToProfileData(ProfileData profileData)
        {
            base.AddObject("ProfileData", profileData);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Profiles. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToProfiles(Profiles profiles)
        {
            base.AddObject("Profiles", profiles);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Roles. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRoles(Roles roles)
        {
            base.AddObject("Roles", roles);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Sessions. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSessions(Sessions sessions)
        {
            base.AddObject("Sessions", sessions);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet UsersInRoles. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsersInRoles(UsersInRoles usersInRoles)
        {
            base.AddObject("UsersInRoles", usersInRoles);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FACCTS_DB_SQL", Name="ProfileData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProfileData : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ProfileData.
        /// </summary>
        /// <param name="pId">Исходное значение свойства pId.</param>
        /// <param name="profile">Исходное значение свойства Profile.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static ProfileData CreateProfileData(global::System.String pId, global::System.String profile, global::System.String name)
        {
            ProfileData profileData = new ProfileData();
            profileData.pId = pId;
            profileData.Profile = profile;
            profileData.Name = name;
            return profileData;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pId
        {
            get
            {
                return _pId;
            }
            set
            {
                if (_pId != value)
                {
                    OnpIdChanging(value);
                    ReportPropertyChanging("pId");
                    _pId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("pId");
                    OnpIdChanged();
                }
            }
        }
        private global::System.String _pId;
        partial void OnpIdChanging(global::System.String value);
        partial void OnpIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Profile
        {
            get
            {
                return _Profile;
            }
            set
            {
                OnProfileChanging(value);
                ReportPropertyChanging("Profile");
                _Profile = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Profile");
                OnProfileChanged();
            }
        }
        private global::System.String _Profile;
        partial void OnProfileChanging(global::System.String value);
        partial void OnProfileChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ValueString
        {
            get
            {
                return _ValueString;
            }
            set
            {
                OnValueStringChanging(value);
                ReportPropertyChanging("ValueString");
                _ValueString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ValueString");
                OnValueStringChanged();
            }
        }
        private global::System.String _ValueString;
        partial void OnValueStringChanging(global::System.String value);
        partial void OnValueStringChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ValueBinary
        {
            get
            {
                return StructuralObject.GetValidValue(_ValueBinary);
            }
            set
            {
                OnValueBinaryChanging(value);
                ReportPropertyChanging("ValueBinary");
                _ValueBinary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ValueBinary");
                OnValueBinaryChanged();
            }
        }
        private global::System.Byte[] _ValueBinary;
        partial void OnValueBinaryChanging(global::System.Byte[] value);
        partial void OnValueBinaryChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FACCTS_DB_SQL", "profiledata_profile_fkey", "Profiles")]
        public Profiles Profiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profiles>("FACCTS_DB_SQL.profiledata_profile_fkey", "Profiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profiles>("FACCTS_DB_SQL.profiledata_profile_fkey", "Profiles").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profiles> ProfilesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profiles>("FACCTS_DB_SQL.profiledata_profile_fkey", "Profiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profiles>("FACCTS_DB_SQL.profiledata_profile_fkey", "Profiles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FACCTS_DB_SQL", Name="Profiles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profiles : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Profiles.
        /// </summary>
        /// <param name="pId">Исходное значение свойства pId.</param>
        /// <param name="username">Исходное значение свойства Username.</param>
        /// <param name="applicationName">Исходное значение свойства ApplicationName.</param>
        public static Profiles CreateProfiles(global::System.String pId, global::System.String username, global::System.String applicationName)
        {
            Profiles profiles = new Profiles();
            profiles.pId = pId;
            profiles.Username = username;
            profiles.ApplicationName = applicationName;
            return profiles;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pId
        {
            get
            {
                return _pId;
            }
            set
            {
                if (_pId != value)
                {
                    OnpIdChanging(value);
                    ReportPropertyChanging("pId");
                    _pId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("pId");
                    OnpIdChanged();
                }
            }
        }
        private global::System.String _pId;
        partial void OnpIdChanging(global::System.String value);
        partial void OnpIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAnonymous;
        partial void OnIsAnonymousChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _LastActivityDate;
        partial void OnLastActivityDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FACCTS_DB_SQL", "profiledata_profile_fkey", "ProfileData")]
        public EntityCollection<ProfileData> ProfileData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProfileData>("FACCTS_DB_SQL.profiledata_profile_fkey", "ProfileData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProfileData>("FACCTS_DB_SQL.profiledata_profile_fkey", "ProfileData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FACCTS_DB_SQL", Name="Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Roles : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Roles.
        /// </summary>
        /// <param name="rolename">Исходное значение свойства Rolename.</param>
        /// <param name="applicationName">Исходное значение свойства ApplicationName.</param>
        public static Roles CreateRoles(global::System.String rolename, global::System.String applicationName)
        {
            Roles roles = new Roles();
            roles.Rolename = rolename;
            roles.ApplicationName = applicationName;
            return roles;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Rolename
        {
            get
            {
                return _Rolename;
            }
            set
            {
                if (_Rolename != value)
                {
                    OnRolenameChanging(value);
                    ReportPropertyChanging("Rolename");
                    _Rolename = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Rolename");
                    OnRolenameChanged();
                }
            }
        }
        private global::System.String _Rolename;
        partial void OnRolenameChanging(global::System.String value);
        partial void OnRolenameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                if (_ApplicationName != value)
                {
                    OnApplicationNameChanging(value);
                    ReportPropertyChanging("ApplicationName");
                    _ApplicationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ApplicationName");
                    OnApplicationNameChanged();
                }
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FACCTS_DB_SQL", "usersinroles_rolename_fkey", "UsersInRoles")]
        public EntityCollection<UsersInRoles> UsersInRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersInRoles>("FACCTS_DB_SQL.usersinroles_rolename_fkey", "UsersInRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersInRoles>("FACCTS_DB_SQL.usersinroles_rolename_fkey", "UsersInRoles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FACCTS_DB_SQL", Name="Sessions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sessions : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Sessions.
        /// </summary>
        /// <param name="sessionId">Исходное значение свойства SessionId.</param>
        /// <param name="applicationName">Исходное значение свойства ApplicationName.</param>
        /// <param name="created">Исходное значение свойства Created.</param>
        /// <param name="expires">Исходное значение свойства Expires.</param>
        /// <param name="timeout">Исходное значение свойства Timeout.</param>
        /// <param name="locked">Исходное значение свойства Locked.</param>
        /// <param name="lockId">Исходное значение свойства LockId.</param>
        /// <param name="lockDate">Исходное значение свойства LockDate.</param>
        /// <param name="flags">Исходное значение свойства Flags.</param>
        public static Sessions CreateSessions(global::System.String sessionId, global::System.String applicationName, global::System.DateTimeOffset created, global::System.DateTimeOffset expires, global::System.Int32 timeout, global::System.Boolean locked, global::System.Int32 lockId, global::System.DateTimeOffset lockDate, global::System.Int32 flags)
        {
            Sessions sessions = new Sessions();
            sessions.SessionId = sessionId;
            sessions.ApplicationName = applicationName;
            sessions.Created = created;
            sessions.Expires = expires;
            sessions.Timeout = timeout;
            sessions.Locked = locked;
            sessions.LockId = lockId;
            sessions.LockDate = lockDate;
            sessions.Flags = flags;
            return sessions;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                if (_SessionId != value)
                {
                    OnSessionIdChanging(value);
                    ReportPropertyChanging("SessionId");
                    _SessionId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SessionId");
                    OnSessionIdChanged();
                }
            }
        }
        private global::System.String _SessionId;
        partial void OnSessionIdChanging(global::System.String value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                if (_ApplicationName != value)
                {
                    OnApplicationNameChanging(value);
                    ReportPropertyChanging("ApplicationName");
                    _ApplicationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ApplicationName");
                    OnApplicationNameChanged();
                }
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTimeOffset _Created;
        partial void OnCreatedChanging(global::System.DateTimeOffset value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset Expires
        {
            get
            {
                return _Expires;
            }
            set
            {
                OnExpiresChanging(value);
                ReportPropertyChanging("Expires");
                _Expires = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Expires");
                OnExpiresChanged();
            }
        }
        private global::System.DateTimeOffset _Expires;
        partial void OnExpiresChanging(global::System.DateTimeOffset value);
        partial void OnExpiresChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Timeout
        {
            get
            {
                return _Timeout;
            }
            set
            {
                OnTimeoutChanging(value);
                ReportPropertyChanging("Timeout");
                _Timeout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timeout");
                OnTimeoutChanged();
            }
        }
        private global::System.Int32 _Timeout;
        partial void OnTimeoutChanging(global::System.Int32 value);
        partial void OnTimeoutChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Locked
        {
            get
            {
                return _Locked;
            }
            set
            {
                OnLockedChanging(value);
                ReportPropertyChanging("Locked");
                _Locked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Locked");
                OnLockedChanged();
            }
        }
        private global::System.Boolean _Locked;
        partial void OnLockedChanging(global::System.Boolean value);
        partial void OnLockedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LockId
        {
            get
            {
                return _LockId;
            }
            set
            {
                OnLockIdChanging(value);
                ReportPropertyChanging("LockId");
                _LockId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockId");
                OnLockIdChanged();
            }
        }
        private global::System.Int32 _LockId;
        partial void OnLockIdChanging(global::System.Int32 value);
        partial void OnLockIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset LockDate
        {
            get
            {
                return _LockDate;
            }
            set
            {
                OnLockDateChanging(value);
                ReportPropertyChanging("LockDate");
                _LockDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockDate");
                OnLockDateChanged();
            }
        }
        private global::System.DateTimeOffset _LockDate;
        partial void OnLockDateChanging(global::System.DateTimeOffset value);
        partial void OnLockDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Flags
        {
            get
            {
                return _Flags;
            }
            set
            {
                OnFlagsChanging(value);
                ReportPropertyChanging("Flags");
                _Flags = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Flags");
                OnFlagsChanged();
            }
        }
        private global::System.Int32 _Flags;
        partial void OnFlagsChanging(global::System.Int32 value);
        partial void OnFlagsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FACCTS_DB_SQL", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Users.
        /// </summary>
        /// <param name="pId">Исходное значение свойства pId.</param>
        /// <param name="username">Исходное значение свойства Username.</param>
        /// <param name="applicationName">Исходное значение свойства ApplicationName.</param>
        /// <param name="password">Исходное значение свойства Password.</param>
        public static Users CreateUsers(global::System.String pId, global::System.String username, global::System.String applicationName, global::System.String password)
        {
            Users users = new Users();
            users.pId = pId;
            users.Username = username;
            users.ApplicationName = applicationName;
            users.Password = password;
            return users;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pId
        {
            get
            {
                return _pId;
            }
            set
            {
                if (_pId != value)
                {
                    OnpIdChanging(value);
                    ReportPropertyChanging("pId");
                    _pId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("pId");
                    OnpIdChanged();
                }
            }
        }
        private global::System.String _pId;
        partial void OnpIdChanging(global::System.String value);
        partial void OnpIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _LastActivityDate;
        partial void OnLastActivityDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsOnLine
        {
            get
            {
                return _IsOnLine;
            }
            set
            {
                OnIsOnLineChanging(value);
                ReportPropertyChanging("IsOnLine");
                _IsOnLine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnLine");
                OnIsOnLineChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsOnLine;
        partial void OnIsOnLineChanging(Nullable<global::System.Boolean> value);
        partial void OnIsOnLineChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLockedOut;
        partial void OnIsLockedOutChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> LastLockedOutDate
        {
            get
            {
                return _LastLockedOutDate;
            }
            set
            {
                OnLastLockedOutDateChanging(value);
                ReportPropertyChanging("LastLockedOutDate");
                _LastLockedOutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockedOutDate");
                OnLastLockedOutDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _LastLockedOutDate;
        partial void OnLastLockedOutDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnLastLockedOutDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private Nullable<global::System.Int32> _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(Nullable<global::System.Int32> value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private Nullable<global::System.Int32> _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(Nullable<global::System.Int32> value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FACCTS_DB_SQL", Name="UsersInRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersInRoles : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта UsersInRoles.
        /// </summary>
        /// <param name="username">Исходное значение свойства Username.</param>
        /// <param name="rolename">Исходное значение свойства Rolename.</param>
        /// <param name="applicationName">Исходное значение свойства ApplicationName.</param>
        public static UsersInRoles CreateUsersInRoles(global::System.String username, global::System.String rolename, global::System.String applicationName)
        {
            UsersInRoles usersInRoles = new UsersInRoles();
            usersInRoles.Username = username;
            usersInRoles.Rolename = rolename;
            usersInRoles.ApplicationName = applicationName;
            return usersInRoles;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    OnUsernameChanging(value);
                    ReportPropertyChanging("Username");
                    _Username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Username");
                    OnUsernameChanged();
                }
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Rolename
        {
            get
            {
                return _Rolename;
            }
            set
            {
                if (_Rolename != value)
                {
                    OnRolenameChanging(value);
                    ReportPropertyChanging("Rolename");
                    _Rolename = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Rolename");
                    OnRolenameChanged();
                }
            }
        }
        private global::System.String _Rolename;
        partial void OnRolenameChanging(global::System.String value);
        partial void OnRolenameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                if (_ApplicationName != value)
                {
                    OnApplicationNameChanging(value);
                    ReportPropertyChanging("ApplicationName");
                    _ApplicationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ApplicationName");
                    OnApplicationNameChanged();
                }
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FACCTS_DB_SQL", "usersinroles_rolename_fkey", "Roles")]
        public Roles Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("FACCTS_DB_SQL.usersinroles_rolename_fkey", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("FACCTS_DB_SQL.usersinroles_rolename_fkey", "Roles").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Roles> RolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("FACCTS_DB_SQL.usersinroles_rolename_fkey", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Roles>("FACCTS_DB_SQL.usersinroles_rolename_fkey", "Roles", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
