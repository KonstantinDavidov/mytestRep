//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Linq.Expressions;
using System.Runtime.Serialization;
using ReactiveUI;
using System.Reactive.Linq;

namespace Faccts.Model.Entities
{
    [DataContract(IsReference = true)]
    public partial class OtherProtected : AdditionalParty, IObjectWithChangeTracker, IReactiveNotifyPropertyChanged, INavigationPropertiesLoadable
    {
        #region Simple Properties
    
        [DataMember]
        public FACCTS.Server.Model.Enums.Relationship RelationToProtected
        {
            get { return _relationToProtected; }
            set
            {
                if (_relationToProtected != value)
                {
    				OnPropertyChanging("RelationToProtected");
                    _relationToProtected = value;
                    OnPropertyChanged("RelationToProtected");
                }
            }
        }
        private FACCTS.Server.Model.Enums.Relationship _relationToProtected;
    
        [DataMember]
        public Nullable<System.DateTime> DateOfBirth
        {
            get { return _dateOfBirth; }
            set
            {
                if (_dateOfBirth != value)
                {
    				OnPropertyChanging("DateOfBirth");
                    _dateOfBirth = value;
                    OnPropertyChanged("DateOfBirth");
                }
            }
        }
        private Nullable<System.DateTime> _dateOfBirth;
    
        [DataMember]
        public FACCTS.Server.Model.Enums.Gender Sex
        {
            get { return _sex; }
            set
            {
                if (_sex != value)
                {
    				OnPropertyChanging("Sex");
                    _sex = value;
                    OnPropertyChanged("Sex");
                }
            }
        }
        private FACCTS.Server.Model.Enums.Gender _sex;

        #endregion

        #region ChangeTracking
    
        protected override void ClearNavigationProperties()
        {
            base.ClearNavigationProperties();
        }

        #endregion

    }
}
