//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Linq.Expressions;
using System.Runtime.Serialization;
using ReactiveUI;
using System.Reactive.Linq;

namespace Faccts.Model.Entities
{
    [DataContract(IsReference = true)]
    public partial class NoGunsEASection : NoGunsSection, IObjectWithChangeTracker, IReactiveNotifyPropertyChanged, INavigationPropertiesLoadable
    {
        #region Simple Properties
    
        [DataMember]
        public bool NoIssued
        {
            get { return _noIssued; }
            set
            {
                if (_noIssued != value)
                {
    				OnPropertyChanging("NoIssued");
                    _noIssued = value;
                    OnPropertyChanged("NoIssued");
                }
            }
        }
        private bool _noIssued;
    
        [DataMember]
        public bool FinancialAbuseOnly
        {
            get { return _financialAbuseOnly; }
            set
            {
                if (_financialAbuseOnly != value)
                {
    				OnPropertyChanging("FinancialAbuseOnly");
                    _financialAbuseOnly = value;
                    OnPropertyChanged("FinancialAbuseOnly");
                }
            }
        }
        private bool _financialAbuseOnly;
    
        [DataMember]
        public bool NoGunsOrder
        {
            get { return _noGunsOrder; }
            set
            {
                if (_noGunsOrder != value)
                {
    				OnPropertyChanging("NoGunsOrder");
                    _noGunsOrder = value;
                    OnPropertyChanged("NoGunsOrder");
                }
            }
        }
        private bool _noGunsOrder;
    
        [DataMember]
        public bool HasInfo
        {
            get { return _hasInfo; }
            set
            {
                if (_hasInfo != value)
                {
    				OnPropertyChanging("HasInfo");
                    _hasInfo = value;
                    OnPropertyChanged("HasInfo");
                }
            }
        }
        private bool _hasInfo;
    
        [DataMember]
        public bool NoFInancialAbuse
        {
            get { return _noFInancialAbuse; }
            set
            {
                if (_noFInancialAbuse != value)
                {
    				OnPropertyChanging("NoFInancialAbuse");
                    _noFInancialAbuse = value;
                    OnPropertyChanged("NoFInancialAbuse");
                }
            }
        }
        private bool _noFInancialAbuse;

        #endregion

        #region ChangeTracking
    
        protected override void ClearNavigationProperties()
        {
            base.ClearNavigationProperties();
        }

        #endregion

    }
}
