//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Linq.Expressions;
using System.Runtime.Serialization;
using ReactiveUI;

namespace Faccts.Model.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Appearances))]
    [KnownType(typeof(Attorneys))]
    [KnownType(typeof(CaseHistory))]
    [KnownType(typeof(CaseNotes))]
    [KnownType(typeof(CaseRecord))]
    [KnownType(typeof(CourtCounty))]
    [KnownType(typeof(CourtDepartmenets))]
    [KnownType(typeof(CourtParty))]
    [KnownType(typeof(Children))]
    [KnownType(typeof(CourtCase))]
    [KnownType(typeof(CourtCaseOrders))]
    [KnownType(typeof(Interpreters))]
    [KnownType(typeof(OtherProtected))]
    [KnownType(typeof(Witnesses))]
    public partial class CaseRecord: IObjectWithChangeTracker, IReactiveNotifyPropertyChanged, INavigationPropertiesLoadable
    {
    		
    		private MakeObjectReactiveHelper _reactiveHelper;
    
    		public CaseRecord()
    		{
    			_reactiveHelper = new MakeObjectReactiveHelper(this);
    			Initialize();
    		}
    
    		partial void Initialize();
    		
    
    		public IObservable<IObservedChange<object, object>> Changed 
    		{
    			get { return _reactiveHelper.Changed; }
    		}
    		public IObservable<IObservedChange<object, object>> Changing 
    		{
    			get { return _reactiveHelper.Changing; }
    		}
    		public IDisposable SuppressChangeNotifications() 
    		{
    			return _reactiveHelper.SuppressChangeNotifications();
    		}
    
    		private PropertyChangingEventHandler _propertyChanging;
    		public event PropertyChangingEventHandler PropertyChanging
    		{
    			add
    			{
    				_propertyChanging += value;
    			}
    			remove
    			{
    				_propertyChanging -= value;
    			}
    		}
    
    		public event EventHandler<LoadingNavigationPropertiesEventArgs> OnNavigationPropertyLoading;
    		protected virtual void RaiseNavigationPropertyLoading(string propertyName)
            {
                if (OnNavigationPropertyLoading != null)
                    OnNavigationPropertyLoading(this, new LoadingNavigationPropertiesEventArgs(propertyName));
            }
    
            protected virtual void RaiseNavigationPropertyLoading<T>(Expression<Func<T>> propertyExpression)
            {
                var body = propertyExpression.Body as MemberExpression;
                if (body == null)
                    throw new ArgumentException("'propertyExpression' should be a member expression");
    
                var expression = body.Expression as ConstantExpression;
                if (expression == null)
                    throw new ArgumentException("'propertyExpression' body should be a constant expression");
    
                object target = Expression.Lambda(expression).Compile().DynamicInvoke();
    
                RaiseNavigationPropertyLoading(body.Member.Name);
            }
    	    #region Simple Properties
    
        [DataMember]
        public int Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
    				OnPropertyChanging("Id");
                    _id = value;
                    OnPropertyChanged("Id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string Judge
        {
            get { return _judge; }
            set
            {
                if (_judge != value)
                {
    				OnPropertyChanging("Judge");
                    _judge = value;
                    OnPropertyChanged("Judge");
                }
            }
        }
        private string _judge;
    
        [DataMember]
        public Nullable<int> Party1_Id
        {
            get { return _party1_Id; }
            set
            {
                if (_party1_Id != value)
                {
                    ChangeTracker.RecordOriginalValue("Party1_Id", _party1_Id);
                    if (!IsDeserializing)
                    {
                        if (CourtParty != null && CourtParty.Id != value)
                        {
                            CourtParty = null;
                        }
                    }
    				OnPropertyChanging("Party1_Id");
                    _party1_Id = value;
                    OnPropertyChanged("Party1_Id");
                }
            }
        }
        private Nullable<int> _party1_Id;
    
        [DataMember]
        public Nullable<int> Party2_Id
        {
            get { return _party2_Id; }
            set
            {
                if (_party2_Id != value)
                {
                    ChangeTracker.RecordOriginalValue("Party2_Id", _party2_Id);
                    if (!IsDeserializing)
                    {
                        if (CourtParty1 != null && CourtParty1.Id != value)
                        {
                            CourtParty1 = null;
                        }
                    }
    				OnPropertyChanging("Party2_Id");
                    _party2_Id = value;
                    OnPropertyChanged("Party2_Id");
                }
            }
        }
        private Nullable<int> _party2_Id;
    
        [DataMember]
        public Nullable<int> AttorneyForParty1_Id
        {
            get { return _attorneyForParty1_Id; }
            set
            {
                if (_attorneyForParty1_Id != value)
                {
                    ChangeTracker.RecordOriginalValue("AttorneyForParty1_Id", _attorneyForParty1_Id);
                    if (!IsDeserializing)
                    {
                        if (Attorneys1 != null && Attorneys1.Id != value)
                        {
                            Attorneys1 = null;
                        }
                    }
    				OnPropertyChanging("AttorneyForParty1_Id");
                    _attorneyForParty1_Id = value;
                    OnPropertyChanged("AttorneyForParty1_Id");
                }
            }
        }
        private Nullable<int> _attorneyForParty1_Id;
    
        [DataMember]
        public Nullable<int> AttorneyForParty2_Id
        {
            get { return _attorneyForParty2_Id; }
            set
            {
                if (_attorneyForParty2_Id != value)
                {
                    ChangeTracker.RecordOriginalValue("AttorneyForParty2_Id", _attorneyForParty2_Id);
                    if (!IsDeserializing)
                    {
                        if (Attorneys2 != null && Attorneys2.Id != value)
                        {
                            Attorneys2 = null;
                        }
                    }
    				OnPropertyChanging("AttorneyForParty2_Id");
                    _attorneyForParty2_Id = value;
                    OnPropertyChanged("AttorneyForParty2_Id");
                }
            }
        }
        private Nullable<int> _attorneyForParty2_Id;
    
        [DataMember]
        public Nullable<int> AttorneyForChild_Id
        {
            get { return _attorneyForChild_Id; }
            set
            {
                if (_attorneyForChild_Id != value)
                {
                    ChangeTracker.RecordOriginalValue("AttorneyForChild_Id", _attorneyForChild_Id);
                    if (!IsDeserializing)
                    {
                        if (Attorneys != null && Attorneys.Id != value)
                        {
                            Attorneys = null;
                        }
                    }
    				OnPropertyChanging("AttorneyForChild_Id");
                    _attorneyForChild_Id = value;
                    OnPropertyChanged("AttorneyForChild_Id");
                }
            }
        }
        private Nullable<int> _attorneyForChild_Id;
    
        [DataMember]
        public Nullable<int> CourtCounty_Id
        {
            get { return _courtCounty_Id; }
            set
            {
                if (_courtCounty_Id != value)
                {
                    ChangeTracker.RecordOriginalValue("CourtCounty_Id", _courtCounty_Id);
                    if (!IsDeserializing)
                    {
                        if (CourtCounty != null && CourtCounty.Id != value)
                        {
                            CourtCounty = null;
                        }
                    }
    				OnPropertyChanging("CourtCounty_Id");
                    _courtCounty_Id = value;
                    OnPropertyChanged("CourtCounty_Id");
                }
            }
        }
        private Nullable<int> _courtCounty_Id;
    
        [DataMember]
        public Nullable<int> CourtDepartment_Id
        {
            get { return _courtDepartment_Id; }
            set
            {
                if (_courtDepartment_Id != value)
                {
                    ChangeTracker.RecordOriginalValue("CourtDepartment_Id", _courtDepartment_Id);
                    if (!IsDeserializing)
                    {
                        if (CourtDepartmenets != null && CourtDepartmenets.Id != value)
                        {
                            CourtDepartmenets = null;
                        }
                    }
    				OnPropertyChanging("CourtDepartment_Id");
                    _courtDepartment_Id = value;
                    OnPropertyChanged("CourtDepartment_Id");
                }
            }
        }
        private Nullable<int> _courtDepartment_Id;
    
        [DataMember]
        public Nullable<int> CaseRecord_Id
        {
            get { return _caseRecord_Id; }
            set
            {
                if (_caseRecord_Id != value)
                {
                    ChangeTracker.RecordOriginalValue("CaseRecord_Id", _caseRecord_Id);
                    if (!IsDeserializing)
                    {
                        if (CaseRecord2 != null && CaseRecord2.Id != value)
                        {
                            CaseRecord2 = null;
                        }
                    }
    				OnPropertyChanging("CaseRecord_Id");
                    _caseRecord_Id = value;
                    OnPropertyChanged("CaseRecord_Id");
                }
            }
        }
        private Nullable<int> _caseRecord_Id;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Appearances> Appearances
        {
            get
            {
                if (_appearances == null)
                {
                    _appearances = new TrackableCollection<Appearances>();
                    _appearances.CollectionChanged += FixupAppearances;
                }
                return _appearances;
            }
            set
            {
                if (!ReferenceEquals(_appearances, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
    				OnNavigationPropertyChanging("Appearances");
                    if (_appearances != null)
                    {
                        _appearances.CollectionChanged -= FixupAppearances;
                    }
                    _appearances = value;
                    if (_appearances != null)
                    {
                        _appearances.CollectionChanged += FixupAppearances;
                    }
                    OnNavigationPropertyChanged("Appearances");
                }
            }
        }
        private TrackableCollection<Appearances> _appearances;
    
        [DataMember]
        public Attorneys Attorneys
        {
            get { return _attorneys; }
            set
            {
                if (!ReferenceEquals(_attorneys, value))
                {
                    var previousValue = _attorneys;
    				OnNavigationPropertyChanging("Attorneys");
                    _attorneys = value;
                    FixupAttorneys(previousValue);
                    OnNavigationPropertyChanged("Attorneys");
                }
            }
        }
        private Attorneys _attorneys;
    
        [DataMember]
        public Attorneys Attorneys1
        {
            get { return _attorneys1; }
            set
            {
                if (!ReferenceEquals(_attorneys1, value))
                {
                    var previousValue = _attorneys1;
    				OnNavigationPropertyChanging("Attorneys1");
                    _attorneys1 = value;
                    FixupAttorneys1(previousValue);
                    OnNavigationPropertyChanged("Attorneys1");
                }
            }
        }
        private Attorneys _attorneys1;
    
        [DataMember]
        public Attorneys Attorneys2
        {
            get { return _attorneys2; }
            set
            {
                if (!ReferenceEquals(_attorneys2, value))
                {
                    var previousValue = _attorneys2;
    				OnNavigationPropertyChanging("Attorneys2");
                    _attorneys2 = value;
                    FixupAttorneys2(previousValue);
                    OnNavigationPropertyChanged("Attorneys2");
                }
            }
        }
        private Attorneys _attorneys2;
    
        [DataMember]
        public TrackableCollection<CaseHistory> CaseHistory
        {
            get
            {
                if (_caseHistory == null)
                {
                    _caseHistory = new TrackableCollection<CaseHistory>();
                    _caseHistory.CollectionChanged += FixupCaseHistory;
                }
                return _caseHistory;
            }
            set
            {
                if (!ReferenceEquals(_caseHistory, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
    				OnNavigationPropertyChanging("CaseHistory");
                    if (_caseHistory != null)
                    {
                        _caseHistory.CollectionChanged -= FixupCaseHistory;
                    }
                    _caseHistory = value;
                    if (_caseHistory != null)
                    {
                        _caseHistory.CollectionChanged += FixupCaseHistory;
                    }
                    OnNavigationPropertyChanged("CaseHistory");
                }
            }
        }
        private TrackableCollection<CaseHistory> _caseHistory;
    
        [DataMember]
        public TrackableCollection<CaseNotes> CaseNotes
        {
            get
            {
                if (_caseNotes == null)
                {
                    _caseNotes = new TrackableCollection<CaseNotes>();
                    _caseNotes.CollectionChanged += FixupCaseNotes;
                }
                return _caseNotes;
            }
            set
            {
                if (!ReferenceEquals(_caseNotes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
    				OnNavigationPropertyChanging("CaseNotes");
                    if (_caseNotes != null)
                    {
                        _caseNotes.CollectionChanged -= FixupCaseNotes;
                    }
                    _caseNotes = value;
                    if (_caseNotes != null)
                    {
                        _caseNotes.CollectionChanged += FixupCaseNotes;
                    }
                    OnNavigationPropertyChanged("CaseNotes");
                }
            }
        }
        private TrackableCollection<CaseNotes> _caseNotes;
    
        [DataMember]
        public TrackableCollection<CaseRecord> CaseRecord1
        {
            get
            {
                if (_caseRecord1 == null)
                {
                    _caseRecord1 = new TrackableCollection<CaseRecord>();
                    _caseRecord1.CollectionChanged += FixupCaseRecord1;
                }
                return _caseRecord1;
            }
            set
            {
                if (!ReferenceEquals(_caseRecord1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
    				OnNavigationPropertyChanging("CaseRecord1");
                    if (_caseRecord1 != null)
                    {
                        _caseRecord1.CollectionChanged -= FixupCaseRecord1;
                    }
                    _caseRecord1 = value;
                    if (_caseRecord1 != null)
                    {
                        _caseRecord1.CollectionChanged += FixupCaseRecord1;
                    }
                    OnNavigationPropertyChanged("CaseRecord1");
                }
            }
        }
        private TrackableCollection<CaseRecord> _caseRecord1;
    
        [DataMember]
        public CaseRecord CaseRecord2
        {
            get { return _caseRecord2; }
            set
            {
                if (!ReferenceEquals(_caseRecord2, value))
                {
                    var previousValue = _caseRecord2;
    				OnNavigationPropertyChanging("CaseRecord2");
                    _caseRecord2 = value;
                    FixupCaseRecord2(previousValue);
                    OnNavigationPropertyChanged("CaseRecord2");
                }
            }
        }
        private CaseRecord _caseRecord2;
    
        [DataMember]
        public CourtCounty CourtCounty
        {
            get { return _courtCounty; }
            set
            {
                if (!ReferenceEquals(_courtCounty, value))
                {
                    var previousValue = _courtCounty;
    				OnNavigationPropertyChanging("CourtCounty");
                    _courtCounty = value;
                    FixupCourtCounty(previousValue);
                    OnNavigationPropertyChanged("CourtCounty");
                }
            }
        }
        private CourtCounty _courtCounty;
    
        [DataMember]
        public CourtDepartmenets CourtDepartmenets
        {
            get { return _courtDepartmenets; }
            set
            {
                if (!ReferenceEquals(_courtDepartmenets, value))
                {
                    var previousValue = _courtDepartmenets;
    				OnNavigationPropertyChanging("CourtDepartmenets");
                    _courtDepartmenets = value;
                    FixupCourtDepartmenets(previousValue);
                    OnNavigationPropertyChanged("CourtDepartmenets");
                }
            }
        }
        private CourtDepartmenets _courtDepartmenets;
    
        [DataMember]
        public CourtParty CourtParty
        {
            get { return _courtParty; }
            set
            {
                if (!ReferenceEquals(_courtParty, value))
                {
                    var previousValue = _courtParty;
    				OnNavigationPropertyChanging("CourtParty");
                    _courtParty = value;
                    FixupCourtParty(previousValue);
                    OnNavigationPropertyChanged("CourtParty");
                }
            }
        }
        private CourtParty _courtParty;
    
        [DataMember]
        public CourtParty CourtParty1
        {
            get { return _courtParty1; }
            set
            {
                if (!ReferenceEquals(_courtParty1, value))
                {
                    var previousValue = _courtParty1;
    				OnNavigationPropertyChanging("CourtParty1");
                    _courtParty1 = value;
                    FixupCourtParty1(previousValue);
                    OnNavigationPropertyChanged("CourtParty1");
                }
            }
        }
        private CourtParty _courtParty1;
    
        [DataMember]
        public TrackableCollection<Children> Children
        {
            get
            {
                if (_children == null)
                {
                    _children = new TrackableCollection<Children>();
                    _children.CollectionChanged += FixupChildren;
                }
                return _children;
            }
            set
            {
                if (!ReferenceEquals(_children, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
    				OnNavigationPropertyChanging("Children");
                    if (_children != null)
                    {
                        _children.CollectionChanged -= FixupChildren;
                    }
                    _children = value;
                    if (_children != null)
                    {
                        _children.CollectionChanged += FixupChildren;
                    }
                    OnNavigationPropertyChanged("Children");
                }
            }
        }
        private TrackableCollection<Children> _children;
    
        [DataMember]
        public TrackableCollection<CourtCase> CourtCase
        {
            get
            {
                if (_courtCase == null)
                {
                    _courtCase = new TrackableCollection<CourtCase>();
                    _courtCase.CollectionChanged += FixupCourtCase;
                }
                return _courtCase;
            }
            set
            {
                if (!ReferenceEquals(_courtCase, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
    				OnNavigationPropertyChanging("CourtCase");
                    if (_courtCase != null)
                    {
                        _courtCase.CollectionChanged -= FixupCourtCase;
                        // This is the principal end in an association that performs cascade deletes.
                        // Remove the cascade delete event handler for any entities in the current collection.
                        foreach (CourtCase item in _courtCase)
                        {
                            ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                        }
                    }
                    _courtCase = value;
                    if (_courtCase != null)
                    {
                        _courtCase.CollectionChanged += FixupCourtCase;
                        // This is the principal end in an association that performs cascade deletes.
                        // Add the cascade delete event handler for any entities that are already in the new collection.
                        foreach (CourtCase item in _courtCase)
                        {
                            ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                        }
                    }
                    OnNavigationPropertyChanged("CourtCase");
                }
            }
        }
        private TrackableCollection<CourtCase> _courtCase;
    
        [DataMember]
        public TrackableCollection<CourtCaseOrders> CourtCaseOrders
        {
            get
            {
                if (_courtCaseOrders == null)
                {
                    _courtCaseOrders = new TrackableCollection<CourtCaseOrders>();
                    _courtCaseOrders.CollectionChanged += FixupCourtCaseOrders;
                }
                return _courtCaseOrders;
            }
            set
            {
                if (!ReferenceEquals(_courtCaseOrders, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
    				OnNavigationPropertyChanging("CourtCaseOrders");
                    if (_courtCaseOrders != null)
                    {
                        _courtCaseOrders.CollectionChanged -= FixupCourtCaseOrders;
                    }
                    _courtCaseOrders = value;
                    if (_courtCaseOrders != null)
                    {
                        _courtCaseOrders.CollectionChanged += FixupCourtCaseOrders;
                    }
                    OnNavigationPropertyChanged("CourtCaseOrders");
                }
            }
        }
        private TrackableCollection<CourtCaseOrders> _courtCaseOrders;
    
        [DataMember]
        public TrackableCollection<CourtParty> CourtParty2
        {
            get
            {
                if (_courtParty2 == null)
                {
                    _courtParty2 = new TrackableCollection<CourtParty>();
                    _courtParty2.CollectionChanged += FixupCourtParty2;
                }
                return _courtParty2;
            }
            set
            {
                if (!ReferenceEquals(_courtParty2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
    				OnNavigationPropertyChanging("CourtParty2");
                    if (_courtParty2 != null)
                    {
                        _courtParty2.CollectionChanged -= FixupCourtParty2;
                    }
                    _courtParty2 = value;
                    if (_courtParty2 != null)
                    {
                        _courtParty2.CollectionChanged += FixupCourtParty2;
                    }
                    OnNavigationPropertyChanged("CourtParty2");
                }
            }
        }
        private TrackableCollection<CourtParty> _courtParty2;
    
        [DataMember]
        public TrackableCollection<CourtParty> CourtParty3
        {
            get
            {
                if (_courtParty3 == null)
                {
                    _courtParty3 = new TrackableCollection<CourtParty>();
                    _courtParty3.CollectionChanged += FixupCourtParty3;
                }
                return _courtParty3;
            }
            set
            {
                if (!ReferenceEquals(_courtParty3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
    				OnNavigationPropertyChanging("CourtParty3");
                    if (_courtParty3 != null)
                    {
                        _courtParty3.CollectionChanged -= FixupCourtParty3;
                    }
                    _courtParty3 = value;
                    if (_courtParty3 != null)
                    {
                        _courtParty3.CollectionChanged += FixupCourtParty3;
                    }
                    OnNavigationPropertyChanged("CourtParty3");
                }
            }
        }
        private TrackableCollection<CourtParty> _courtParty3;
    
        [DataMember]
        public TrackableCollection<Interpreters> Interpreters
        {
            get
            {
                if (_interpreters == null)
                {
                    _interpreters = new TrackableCollection<Interpreters>();
                    _interpreters.CollectionChanged += FixupInterpreters;
                }
                return _interpreters;
            }
            set
            {
                if (!ReferenceEquals(_interpreters, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
    				OnNavigationPropertyChanging("Interpreters");
                    if (_interpreters != null)
                    {
                        _interpreters.CollectionChanged -= FixupInterpreters;
                    }
                    _interpreters = value;
                    if (_interpreters != null)
                    {
                        _interpreters.CollectionChanged += FixupInterpreters;
                    }
                    OnNavigationPropertyChanged("Interpreters");
                }
            }
        }
        private TrackableCollection<Interpreters> _interpreters;
    
        [DataMember]
        public TrackableCollection<OtherProtected> OtherProtected
        {
            get
            {
                if (_otherProtected == null)
                {
                    _otherProtected = new TrackableCollection<OtherProtected>();
                    _otherProtected.CollectionChanged += FixupOtherProtected;
                }
                return _otherProtected;
            }
            set
            {
                if (!ReferenceEquals(_otherProtected, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
    				OnNavigationPropertyChanging("OtherProtected");
                    if (_otherProtected != null)
                    {
                        _otherProtected.CollectionChanged -= FixupOtherProtected;
                    }
                    _otherProtected = value;
                    if (_otherProtected != null)
                    {
                        _otherProtected.CollectionChanged += FixupOtherProtected;
                    }
                    OnNavigationPropertyChanged("OtherProtected");
                }
            }
        }
        private TrackableCollection<OtherProtected> _otherProtected;
    
        [DataMember]
        public TrackableCollection<Witnesses> Witnesses
        {
            get
            {
                if (_witnesses == null)
                {
                    _witnesses = new TrackableCollection<Witnesses>();
                    _witnesses.CollectionChanged += FixupWitnesses;
                }
                return _witnesses;
            }
            set
            {
                if (!ReferenceEquals(_witnesses, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
    				OnNavigationPropertyChanging("Witnesses");
                    if (_witnesses != null)
                    {
                        _witnesses.CollectionChanged -= FixupWitnesses;
                    }
                    _witnesses = value;
                    if (_witnesses != null)
                    {
                        _witnesses.CollectionChanged += FixupWitnesses;
                    }
                    OnNavigationPropertyChanged("Witnesses");
                }
            }
        }
        private TrackableCollection<Witnesses> _witnesses;
    
        [DataMember]
        public TrackableCollection<CourtCase> CourtCase1
        {
            get
            {
                if (_courtCase1 == null)
                {
                    _courtCase1 = new TrackableCollection<CourtCase>();
                    _courtCase1.CollectionChanged += FixupCourtCase1;
                }
                return _courtCase1;
            }
            set
            {
                if (!ReferenceEquals(_courtCase1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
    				OnNavigationPropertyChanging("CourtCase1");
                    if (_courtCase1 != null)
                    {
                        _courtCase1.CollectionChanged -= FixupCourtCase1;
                    }
                    _courtCase1 = value;
                    if (_courtCase1 != null)
                    {
                        _courtCase1.CollectionChanged += FixupCourtCase1;
                    }
                    OnNavigationPropertyChanged("CourtCase1");
                }
            }
        }
        private TrackableCollection<CourtCase> _courtCase1;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
    	protected virtual void OnPropertyChanging(String propertyName)
        {
            if (_propertyChanging != null)
            {
                _propertyChanging(this, new PropertyChangingEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
    	protected virtual void OnNavigationPropertyChanging(String propertyName)
        {
            if (_propertyChanging != null)
            {
                _propertyChanging(this, new PropertyChangingEventArgs(propertyName));
            }
        }
    
    	public override bool Equals(System.Object obj)
    	{
    		// If parameter is null return false.
            if (obj == null)
            {
                return false;
            }
    
            // If parameter cannot be cast to Point return false.
            CaseRecord p = obj as CaseRecord;
            if ((System.Object)p == null)
            {
                return false;
            }
    
    			if (this.Id != p.Id)
    				return false;
    			if (this.Judge != p.Judge)
    				return false;
    			if (this.Party1_Id != p.Party1_Id)
    				return false;
    			if (this.Party2_Id != p.Party2_Id)
    				return false;
    			if (this.AttorneyForParty1_Id != p.AttorneyForParty1_Id)
    				return false;
    			if (this.AttorneyForParty2_Id != p.AttorneyForParty2_Id)
    				return false;
    			if (this.AttorneyForChild_Id != p.AttorneyForChild_Id)
    				return false;
    			if (this.CourtCounty_Id != p.CourtCounty_Id)
    				return false;
    			if (this.CourtDepartment_Id != p.CourtDepartment_Id)
    				return false;
    			if (this.CaseRecord_Id != p.CaseRecord_Id)
    				return false;
    
    		return true;
    	}
    
    	public override int GetHashCode()
    	{
    		int hashCode = 1;
    			
    		hashCode ^= this.Id.GetHashCode();
    		if (this.Id != null)
    		{
    			hashCode ^= this.Id.GetHashCode();
    		}
     
    		if (this.Judge != null)
    		{
    			hashCode ^= this.Judge.GetHashCode();
    		}
     
    		if (this.Party1_Id != null)
    		{
    			hashCode ^= this.Party1_Id.GetHashCode();
    		}
     
    		if (this.Party2_Id != null)
    		{
    			hashCode ^= this.Party2_Id.GetHashCode();
    		}
     
    		if (this.AttorneyForParty1_Id != null)
    		{
    			hashCode ^= this.AttorneyForParty1_Id.GetHashCode();
    		}
     
    		if (this.AttorneyForParty2_Id != null)
    		{
    			hashCode ^= this.AttorneyForParty2_Id.GetHashCode();
    		}
     
    		if (this.AttorneyForChild_Id != null)
    		{
    			hashCode ^= this.AttorneyForChild_Id.GetHashCode();
    		}
     
    		if (this.CourtCounty_Id != null)
    		{
    			hashCode ^= this.CourtCounty_Id.GetHashCode();
    		}
     
    		if (this.CourtDepartment_Id != null)
    		{
    			hashCode ^= this.CourtDepartment_Id.GetHashCode();
    		}
     
    		if (this.CaseRecord_Id != null)
    		{
    			hashCode ^= this.CaseRecord_Id.GetHashCode();
    		}
    		return hashCode;
    	}
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Appearances.Clear();
            Attorneys = null;
            Attorneys1 = null;
            Attorneys2 = null;
            CaseHistory.Clear();
            CaseNotes.Clear();
            CaseRecord1.Clear();
            CaseRecord2 = null;
            CourtCounty = null;
            CourtDepartmenets = null;
            CourtParty = null;
            CourtParty1 = null;
            Children.Clear();
            CourtCase.Clear();
            CourtCaseOrders.Clear();
            CourtParty2.Clear();
            CourtParty3.Clear();
            Interpreters.Clear();
            OtherProtected.Clear();
            Witnesses.Clear();
            CourtCase1.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupAttorneys(Attorneys previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CaseRecord.Contains(this))
            {
                previousValue.CaseRecord.Remove(this);
            }
    
            if (Attorneys != null)
            {
                Attorneys.CaseRecord.Add(this);
    
                AttorneyForChild_Id = Attorneys.Id;
            }
            else if (!skipKeys)
            {
                AttorneyForChild_Id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Attorneys")
                    && (ChangeTracker.OriginalValues["Attorneys"] == Attorneys))
                {
                    ChangeTracker.OriginalValues.Remove("Attorneys");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Attorneys", previousValue);
                }
                if (Attorneys != null && !Attorneys.ChangeTracker.ChangeTrackingEnabled)
                {
                    Attorneys.StartTracking();
                }
            }
        }
    
        private void FixupAttorneys1(Attorneys previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CaseRecord1.Contains(this))
            {
                previousValue.CaseRecord1.Remove(this);
            }
    
            if (Attorneys1 != null)
            {
                Attorneys1.CaseRecord1.Add(this);
    
                AttorneyForParty1_Id = Attorneys1.Id;
            }
            else if (!skipKeys)
            {
                AttorneyForParty1_Id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Attorneys1")
                    && (ChangeTracker.OriginalValues["Attorneys1"] == Attorneys1))
                {
                    ChangeTracker.OriginalValues.Remove("Attorneys1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Attorneys1", previousValue);
                }
                if (Attorneys1 != null && !Attorneys1.ChangeTracker.ChangeTrackingEnabled)
                {
                    Attorneys1.StartTracking();
                }
            }
        }
    
        private void FixupAttorneys2(Attorneys previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CaseRecord2.Contains(this))
            {
                previousValue.CaseRecord2.Remove(this);
            }
    
            if (Attorneys2 != null)
            {
                Attorneys2.CaseRecord2.Add(this);
    
                AttorneyForParty2_Id = Attorneys2.Id;
            }
            else if (!skipKeys)
            {
                AttorneyForParty2_Id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Attorneys2")
                    && (ChangeTracker.OriginalValues["Attorneys2"] == Attorneys2))
                {
                    ChangeTracker.OriginalValues.Remove("Attorneys2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Attorneys2", previousValue);
                }
                if (Attorneys2 != null && !Attorneys2.ChangeTracker.ChangeTrackingEnabled)
                {
                    Attorneys2.StartTracking();
                }
            }
        }
    
        private void FixupCaseRecord2(CaseRecord previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CaseRecord1.Contains(this))
            {
                previousValue.CaseRecord1.Remove(this);
            }
    
            if (CaseRecord2 != null)
            {
                CaseRecord2.CaseRecord1.Add(this);
    
                CaseRecord_Id = CaseRecord2.Id;
            }
            else if (!skipKeys)
            {
                CaseRecord_Id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CaseRecord2")
                    && (ChangeTracker.OriginalValues["CaseRecord2"] == CaseRecord2))
                {
                    ChangeTracker.OriginalValues.Remove("CaseRecord2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CaseRecord2", previousValue);
                }
                if (CaseRecord2 != null && !CaseRecord2.ChangeTracker.ChangeTrackingEnabled)
                {
                    CaseRecord2.StartTracking();
                }
            }
        }
    
        private void FixupCourtCounty(CourtCounty previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CaseRecord.Contains(this))
            {
                previousValue.CaseRecord.Remove(this);
            }
    
            if (CourtCounty != null)
            {
                CourtCounty.CaseRecord.Add(this);
    
                CourtCounty_Id = CourtCounty.Id;
            }
            else if (!skipKeys)
            {
                CourtCounty_Id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CourtCounty")
                    && (ChangeTracker.OriginalValues["CourtCounty"] == CourtCounty))
                {
                    ChangeTracker.OriginalValues.Remove("CourtCounty");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CourtCounty", previousValue);
                }
                if (CourtCounty != null && !CourtCounty.ChangeTracker.ChangeTrackingEnabled)
                {
                    CourtCounty.StartTracking();
                }
            }
        }
    
        private void FixupCourtDepartmenets(CourtDepartmenets previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CaseRecord.Contains(this))
            {
                previousValue.CaseRecord.Remove(this);
            }
    
            if (CourtDepartmenets != null)
            {
                CourtDepartmenets.CaseRecord.Add(this);
    
                CourtDepartment_Id = CourtDepartmenets.Id;
            }
            else if (!skipKeys)
            {
                CourtDepartment_Id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CourtDepartmenets")
                    && (ChangeTracker.OriginalValues["CourtDepartmenets"] == CourtDepartmenets))
                {
                    ChangeTracker.OriginalValues.Remove("CourtDepartmenets");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CourtDepartmenets", previousValue);
                }
                if (CourtDepartmenets != null && !CourtDepartmenets.ChangeTracker.ChangeTrackingEnabled)
                {
                    CourtDepartmenets.StartTracking();
                }
            }
        }
    
        private void FixupCourtParty(CourtParty previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CaseRecord.Contains(this))
            {
                previousValue.CaseRecord.Remove(this);
            }
    
            if (CourtParty != null)
            {
                CourtParty.CaseRecord.Add(this);
    
                Party1_Id = CourtParty.Id;
            }
            else if (!skipKeys)
            {
                Party1_Id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CourtParty")
                    && (ChangeTracker.OriginalValues["CourtParty"] == CourtParty))
                {
                    ChangeTracker.OriginalValues.Remove("CourtParty");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CourtParty", previousValue);
                }
                if (CourtParty != null && !CourtParty.ChangeTracker.ChangeTrackingEnabled)
                {
                    CourtParty.StartTracking();
                }
            }
        }
    
        private void FixupCourtParty1(CourtParty previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CaseRecord1.Contains(this))
            {
                previousValue.CaseRecord1.Remove(this);
            }
    
            if (CourtParty1 != null)
            {
                CourtParty1.CaseRecord1.Add(this);
    
                Party2_Id = CourtParty1.Id;
            }
            else if (!skipKeys)
            {
                Party2_Id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CourtParty1")
                    && (ChangeTracker.OriginalValues["CourtParty1"] == CourtParty1))
                {
                    ChangeTracker.OriginalValues.Remove("CourtParty1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CourtParty1", previousValue);
                }
                if (CourtParty1 != null && !CourtParty1.ChangeTracker.ChangeTrackingEnabled)
                {
                    CourtParty1.StartTracking();
                }
            }
        }
    
        private void FixupAppearances(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Appearances item in e.NewItems)
                {
                    item.CaseRecord = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Appearances", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Appearances item in e.OldItems)
                {
                    if (ReferenceEquals(item.CaseRecord, this))
                    {
                        item.CaseRecord = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Appearances", item);
                    }
                }
            }
        }
    
        private void FixupCaseHistory(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CaseHistory item in e.NewItems)
                {
                    item.CaseRecord = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CaseHistory", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CaseHistory item in e.OldItems)
                {
                    if (ReferenceEquals(item.CaseRecord, this))
                    {
                        item.CaseRecord = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CaseHistory", item);
                    }
                }
            }
        }
    
        private void FixupCaseNotes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CaseNotes item in e.NewItems)
                {
                    item.CaseRecord = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CaseNotes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CaseNotes item in e.OldItems)
                {
                    if (ReferenceEquals(item.CaseRecord, this))
                    {
                        item.CaseRecord = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CaseNotes", item);
                    }
                }
            }
        }
    
        private void FixupCaseRecord1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CaseRecord item in e.NewItems)
                {
                    item.CaseRecord2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CaseRecord1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CaseRecord item in e.OldItems)
                {
                    if (ReferenceEquals(item.CaseRecord2, this))
                    {
                        item.CaseRecord2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CaseRecord1", item);
                    }
                }
            }
        }
    
        private void FixupChildren(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Children item in e.NewItems)
                {
                    item.CaseRecord = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Children", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Children item in e.OldItems)
                {
                    if (ReferenceEquals(item.CaseRecord, this))
                    {
                        item.CaseRecord = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Children", item);
                    }
                }
            }
        }
    
        private void FixupCourtCase(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CourtCase item in e.NewItems)
                {
                    item.CaseRecord = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CourtCase", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Update the event listener to refer to the new dependent.
                    ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CourtCase item in e.OldItems)
                {
                    if (ReferenceEquals(item.CaseRecord, this))
                    {
                        item.CaseRecord = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CourtCase", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Remove the previous dependent from the event listener.
                    ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                }
            }
        }
    
        private void FixupCourtCaseOrders(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CourtCaseOrders item in e.NewItems)
                {
                    item.CaseRecord = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CourtCaseOrders", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CourtCaseOrders item in e.OldItems)
                {
                    if (ReferenceEquals(item.CaseRecord, this))
                    {
                        item.CaseRecord = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CourtCaseOrders", item);
                    }
                }
            }
        }
    
        private void FixupCourtParty2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CourtParty item in e.NewItems)
                {
                    item.CaseRecord2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CourtParty2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CourtParty item in e.OldItems)
                {
                    if (ReferenceEquals(item.CaseRecord2, this))
                    {
                        item.CaseRecord2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CourtParty2", item);
                    }
                }
            }
        }
    
        private void FixupCourtParty3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CourtParty item in e.NewItems)
                {
                    item.CaseRecord3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CourtParty3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CourtParty item in e.OldItems)
                {
                    if (ReferenceEquals(item.CaseRecord3, this))
                    {
                        item.CaseRecord3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CourtParty3", item);
                    }
                }
            }
        }
    
        private void FixupInterpreters(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Interpreters item in e.NewItems)
                {
                    item.CaseRecord = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Interpreters", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Interpreters item in e.OldItems)
                {
                    if (ReferenceEquals(item.CaseRecord, this))
                    {
                        item.CaseRecord = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Interpreters", item);
                    }
                }
            }
        }
    
        private void FixupOtherProtected(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (OtherProtected item in e.NewItems)
                {
                    item.CaseRecord = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("OtherProtected", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OtherProtected item in e.OldItems)
                {
                    if (ReferenceEquals(item.CaseRecord, this))
                    {
                        item.CaseRecord = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("OtherProtected", item);
                    }
                }
            }
        }
    
        private void FixupWitnesses(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Witnesses item in e.NewItems)
                {
                    item.CaseRecord = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Witnesses", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Witnesses item in e.OldItems)
                {
                    if (ReferenceEquals(item.CaseRecord, this))
                    {
                        item.CaseRecord = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Witnesses", item);
                    }
                }
            }
        }
    
        private void FixupCourtCase1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CourtCase item in e.NewItems)
                {
                    item.CaseRecord1.Add(this);
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CourtCase1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CourtCase item in e.OldItems)
                {
                    if (item.CaseRecord1.Contains(this))
                    {
                        item.CaseRecord1.Remove(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CourtCase1", item);
                    }
                }
            }
        }

        #endregion

    }
}
